shadow$provide.module$node_modules$react_leaflet$lib$Popup=function(global,process,require,module,exports,shadow$shims){process=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.default=void 0;var _extends2=process(require("module$node_modules$$babel$runtime$helpers$extends")),_inheritsLoose2=process(require("module$node_modules$$babel$runtime$helpers$inheritsLoose")),_assertThisInitialized2=process(require("module$node_modules$$babel$runtime$helpers$assertThisInitialized")),
_defineProperty2=process(require("module$node_modules$$babel$runtime$helpers$defineProperty")),_leaflet=require("module$node_modules$leaflet$dist$leaflet_src");global=require("module$node_modules$react_leaflet$lib$context");require=function(_DivOverlay){function Popup(){for(var _this,_len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];_this=_DivOverlay.call.apply(_DivOverlay,[this].concat(args))||this;(0,_defineProperty2.default)((0,_assertThisInitialized2.default)((0,
_assertThisInitialized2.default)(_this)),"onPopupOpen",function(_ref){if(_ref.popup===_this.leafletElement)_this.onOpen()});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)),"onPopupClose",function(_ref2){if(_ref2.popup===_this.leafletElement)_this.onClose()});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)),"onRender",function(){!1!==_this.props.autoPan&&_this.leafletElement.isOpen()&&
(_this.leafletElement._map&&_this.leafletElement._map._panAnim&&(_this.leafletElement._map._panAnim=void 0),_this.leafletElement._adjustPan())});return _this}(0,_inheritsLoose2.default)(Popup,_DivOverlay);var _proto=Popup.prototype;_proto.getOptions=function(props){return(0,_extends2.default)({},_DivOverlay.prototype.getOptions.call(this,props),{autoPan:!1})};_proto.createLeafletElement=function(props){var options=this.getOptions(props);options.autoPan=!1!==props.autoPan;return new _leaflet.Popup(options,
props.leaflet.popupContainer)};_proto.updateLeafletElement=function(fromProps,toProps){toProps.position!==fromProps.position&&this.leafletElement.setLatLng(toProps.position)};_proto.componentDidMount=function(){var position=this.props.position,_this$props$leaflet=this.props.leaflet,map=_this$props$leaflet.map;_this$props$leaflet=_this$props$leaflet.popupContainer;var el=this.leafletElement;if(null!=map)map.on({popupopen:this.onPopupOpen,popupclose:this.onPopupClose});_this$props$leaflet?_this$props$leaflet.bindPopup(el):
(position&&el.setLatLng(position),el.openOn(map))};_proto.componentWillUnmount=function(){var map=this.props.leaflet.map;null!=map&&(map.off({popupopen:this.onPopupOpen,popupclose:this.onPopupClose}),map.removeLayer(this.leafletElement));_DivOverlay.prototype.componentWillUnmount.call(this)};return Popup}(process(require("module$node_modules$react_leaflet$lib$DivOverlay")).default);(0,_defineProperty2.default)(require,"defaultProps",{pane:"popupPane"});require=(0,global.withLeaflet)(require);exports.default=
require}
//# sourceMappingURL=module$node_modules$react_leaflet$lib$Popup.js.map
