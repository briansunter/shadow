{
"version":3,
"file":"module$node_modules$radium$lib$plugins$merge_style_array_plugin.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,gEAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGjJC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAgBAJ,QAAAK,QAAA,CAT4BC,QAA8B,CAACC,IAAD,CAAO,CAAA,IAC3DC,MAAQD,IAAAC,MACRC,KAAAA,CAAcF,IAAAE,YAIlB,OAAO,CAAED,MADME,KAAAC,QAAA,CAAcH,KAAd,CAAAI,CAAuBH,IAAA,CAAYD,KAAZ,CAAvBI,CAA4CJ,KACpD,CANwD,CAUjET,OAAAC,QAAA,CAAiBA,OAAA,CAAQ,SAAR,CApBgI;",
"sources":["node_modules/radium/lib/plugins/merge-style-array-plugin.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$radium$lib$plugins$merge_style_array_plugin\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n\n// Convenient syntax for multiple styles: `style={[style1, style2, etc]}`\n// Ignores non-objects, so you can do `this.state.isCool && styles.cool`.\nvar mergeStyleArrayPlugin = function mergeStyleArrayPlugin(_ref) {\n  var style = _ref.style,\n      mergeStyles = _ref.mergeStyles;\n\n  // eslint-disable-line no-shadow\n  var newStyle = Array.isArray(style) ? mergeStyles(style) : style;\n  return { style: newStyle };\n};\n\nexports.default = mergeStyleArrayPlugin;\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","default","mergeStyleArrayPlugin","_ref","style","mergeStyles","Array","isArray","newStyle"]
}
