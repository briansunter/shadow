{
"version":3,
"file":"module$node_modules$lodash$_isIndex.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,oCAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAKrH,IAAIC,SAAW,kBAiBfH,OAAAC,QAAA,CAPAG,QAAgB,CAACC,KAAD,CAAQC,MAAR,CAAgB,CAC9BA,MAAA,CAAmB,IAAV,EAAAA,MAAA,CAdYC,gBAcZ,CAAoCD,MAC7C,OAAO,CAAC,CAACA,MAAT,GACmB,QADnB,EACG,MAAOD,MADV,EAC+BF,QAAAK,KAAA,CAAcH,KAAd,CAD/B,GAEY,EAFZ,CAEGA,KAFH,EAE8B,CAF9B,EAEiBA,KAFjB,CAEyB,CAFzB,EAEmCA,KAFnC,CAE2CC,MAJb,CAfqF;",
"sources":["node_modules/lodash/_isIndex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_isIndex\"] = function(global,process,require,module,exports,shadow$shims) {\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","reIsUint","isIndex","value","length","MAX_SAFE_INTEGER","test"]
}
