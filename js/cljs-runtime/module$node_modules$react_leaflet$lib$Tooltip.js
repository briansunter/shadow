shadow$provide.module$node_modules$react_leaflet$lib$Tooltip=function(global,process,require,module,exports,shadow$shims){process=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.default=void 0;var _inheritsLoose2=process(require("module$node_modules$$babel$runtime$helpers$inheritsLoose")),_assertThisInitialized2=process(require("module$node_modules$$babel$runtime$helpers$assertThisInitialized")),_defineProperty2=process(require("module$node_modules$$babel$runtime$helpers$defineProperty")),
_leaflet=require("module$node_modules$leaflet$dist$leaflet_src");global=require("module$node_modules$react_leaflet$lib$context");require=function(_DivOverlay){function Tooltip(){for(var _this,_len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];_this=_DivOverlay.call.apply(_DivOverlay,[this].concat(args))||this;(0,_defineProperty2.default)((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)),"onTooltipOpen",function(_ref){if(_ref.tooltip===
_this.leafletElement)_this.onOpen()});(0,_defineProperty2.default)((0,_assertThisInitialized2.default)((0,_assertThisInitialized2.default)(_this)),"onTooltipClose",function(_ref2){if(_ref2.tooltip===_this.leafletElement)_this.onClose()});return _this}(0,_inheritsLoose2.default)(Tooltip,_DivOverlay);var _proto=Tooltip.prototype;_proto.createLeafletElement=function(props){return new _leaflet.Tooltip(this.getOptions(props),props.leaflet.popupContainer)};_proto.componentDidMount=function(){var popupContainer=
this.props.leaflet.popupContainer;null!=popupContainer&&(popupContainer.on({tooltipopen:this.onTooltipOpen,tooltipclose:this.onTooltipClose}),popupContainer.bindTooltip(this.leafletElement))};_proto.componentWillUnmount=function(){var popupContainer=this.props.leaflet.popupContainer;null!=popupContainer&&(popupContainer.off({tooltipopen:this.onTooltipOpen,tooltipclose:this.onTooltipClose}),null!=popupContainer._map&&popupContainer.unbindTooltip(this.leafletElement))};return Tooltip}(process(require("module$node_modules$react_leaflet$lib$DivOverlay")).default);
(0,_defineProperty2.default)(require,"defaultProps",{pane:"tooltipPane"});require=(0,global.withLeaflet)(require);exports.default=require}
//# sourceMappingURL=module$node_modules$react_leaflet$lib$Tooltip.js.map
