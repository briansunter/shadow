{
"version":3,
"file":"module$node_modules$inline_style_prefixer$lib$utils$getBrowserInformation.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/inline-style-prefixer/lib/utils/getBrowserInformation.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$inline_style_prefixer$lib$utils$getBrowserInformation\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _bowser = require('bowser');\n\nvar _bowser2 = _interopRequireDefault(_bowser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar vendorPrefixes = {\n  Webkit: ['chrome', 'safari', 'ios', 'android', 'phantom', 'opera', 'webos', 'blackberry', 'bada', 'tizen', 'chromium', 'vivaldi'],\n  Moz: ['firefox', 'seamonkey', 'sailfish'],\n  ms: ['msie', 'msedge']\n};\nvar browsers = {\n  chrome: [['chrome'], ['chromium']],\n  safari: [['safari']],\n  firefox: [['firefox']],\n  edge: [['msedge']],\n  opera: [['opera'], ['vivaldi']],\n  ios_saf: [['ios', 'mobile'], ['ios', 'tablet']],\n  ie: [['msie']],\n  op_mini: [['opera', 'mobile'], ['opera', 'tablet']],\n  and_uc: [['android', 'mobile'], ['android', 'tablet']],\n  android: [['android', 'mobile'], ['android', 'tablet']]\n};\n\nvar browserByInfo = function browserByInfo(info) {\n  if (info.firefox) {\n    return 'firefox';\n  }\n  var name = '';\n\n  Object.keys(browsers).forEach(function (browser) {\n    browsers[browser].forEach(function (condition) {\n      var match = 0;\n      condition.forEach(function (single) {\n        if (info[single]) {\n          match += 1;\n        }\n      });\n      if (condition.length === match) {\n        name = browser;\n      }\n    });\n  });\n\n  return name;\n};\n\n/**\n * Uses bowser to get default browser information such as version and name\n * Evaluates bowser info and adds vendorPrefix information\n * @param {string} userAgent - userAgent that gets evaluated\n */\n\nexports.default = function (userAgent) {\n  if (!userAgent) {\n    return false;\n  }\n  var info = _bowser2.default._detect(userAgent);\n\n  Object.keys(vendorPrefixes).forEach(function (prefix) {\n    vendorPrefixes[prefix].forEach(function (browser) {\n      if (info[browser]) {\n        info.prefix = {\n          inline: prefix,\n          css: '-' + prefix.toLowerCase() + '-'\n        };\n      }\n    });\n  });\n\n  info.browser = browserByInfo(info);\n\n  // For cordova IOS 8 the version is missing, set truncated osversion to prevent NaN\n  info.version = info.version ? parseFloat(info.version) : parseInt(parseFloat(info.osversion), 10);\n  info.osversion = parseFloat(info.osversion);\n\n  // iOS forces all browsers to use Safari under the hood\n  // as the Safari version seems to match the iOS version\n  // we just explicitely use the osversion instead\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/72\n  if (info.browser === 'ios_saf' && info.version > info.osversion) {\n    info.version = info.osversion;\n    info.safari = true;\n  }\n\n  // seperate native android chrome\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/45\n  if (info.browser === 'android' && info.chrome && info.version > 37) {\n    info.browser = 'and_chr';\n  }\n\n  // For android < 4.4 we want to check the osversion\n  // not the chrome version, see issue #26\n  // https://github.com/rofrischmann/inline-style-prefixer/issues/26\n  if (info.browser === 'android' && info.osversion < 5) {\n    info.version = info.osversion;\n  }\n\n  return info;\n};\n\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","_bowser2","_bowser","__esModule","default","vendorPrefixes","Webkit","Moz","ms","browsers","chrome","safari","firefox","edge","opera","ios_saf","ie","op_mini","and_uc","android","browserByInfo","info","name","keys","forEach","browser","condition","match","single","length","exports.default","userAgent","_detect","prefix","inline","css","toLowerCase","version","parseFloat","parseInt","osversion"]
}
