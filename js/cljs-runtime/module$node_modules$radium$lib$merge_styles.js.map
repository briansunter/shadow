{
"version":3,
"file":"module$node_modules$radium$lib$merge_styles.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,4CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAW7HC,QAASA,cAAa,CAACC,KAAD,CAAQ,CAG5B,MAAOA,MAAP,EAAgBA,KAAAC,YAAhB,GAAsCC,MAAtC,EAAgDF,KAAAG,SAAhD,GAAmED,MAAAE,UAAAD,SAHvC,CAO9BE,QAASA,YAAW,CAACC,MAAD,CAAS,CAC3B,IAAIC,OAAS,EAEbD,OAAAE,QAAA,CAAe,QAAS,CAACC,KAAD,CAAQ,CACzBA,KAAL,EAAgF,QAAhF,IAAgC,WAAjB,GAAA,MAAOA,MAAP,CAA+B,WAA/B,CAA6CC,OAAA,CAAQD,KAAR,CAA5D,IAIIE,KAAAC,QAAA,CAAcH,KAAd,CAIJ,GAHEA,KAGF,CAHUJ,WAAA,CAAYI,KAAZ,CAGV,EAAAP,MAAAW,KAAA,CAAYJ,KAAZ,CAAAD,QAAA,CAA2B,QAAS,CAACM,GAAD,CAAM,CAExC,GAAKf,aAAA,CAAcU,KAAA,CAAMK,GAAN,CAAd,CAAL;AAAmCf,aAAA,CAAcQ,MAAA,CAAOO,GAAP,CAAd,CAAnC,CAAA,CASA,GAA8B,CAA9B,GAAIA,GAAAC,QAAA,CAAY,QAAZ,CAAJ,CAGE,IAFA,IAAIC,OAASF,GAEb,CAAA,CAAA,CAEE,GADAE,MACI,EADM,GACN,CAAA,CAACT,MAAA,CAAOS,MAAP,CAAL,CAAqB,CACnBT,MAAA,CAAOS,MAAP,CAAA,CAAiBP,KAAA,CAAMK,GAAN,CACjB,OAFmB,CAQzBP,MAAA,CAAOO,GAAP,CAAA,CAAcT,WAAA,CAAY,CAACE,MAAA,CAAOO,GAAP,CAAD,CAAcL,KAAA,CAAMK,GAAN,CAAd,CAAZ,CAtBd,CAAA,IACEP,OAAA,CAAOO,GAAP,CAAA,CAAcL,KAAA,CAAMK,GAAN,CAHwB,CAA1C,CARA,CAD8B,CAAhC,CAqCA,OAAOP,OAxCoB,CAf7BL,MAAAe,eAAA,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAIA,KAAIU,QAA4B,UAAlB,GAAA,MAAOQ,OAAP,EAA2D,QAA3D,GAAgC,MAAOA,OAAAC,SAAvC,CAAsE,QAAS,CAACC,GAAD,CAAM,CAAE,MAAO,OAAOA,IAAhB,CAArF,CAA8G,QAAS,CAACA,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAyB,UAAzB,GAAO,MAAOF,OAAd,EAAuCE,GAAAnB,YAAvC,GAA2DiB,MAA3D,EAAqEE,GAArE,GAA6EF,MAAAd,UAA7E;AAAgG,QAAhG,CAA2G,MAAOgB,IAA3H,CAE3IvB,QAAAE,cAAA,CAAwBA,aACxBF,QAAAQ,YAAA,CAAsBA,WAVuG;",
"sources":["node_modules/radium/lib/merge-styles.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$radium$lib$merge_styles\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.isNestedStyle = isNestedStyle;\nexports.mergeStyles = mergeStyles;\nfunction isNestedStyle(value) {\n  // Don't merge objects overriding toString, since they should be converted\n  // to string values.\n  return value && value.constructor === Object && value.toString === Object.prototype.toString;\n}\n\n// Merge style objects. Deep merge plain object values.\nfunction mergeStyles(styles) {\n  var result = {};\n\n  styles.forEach(function (style) {\n    if (!style || (typeof style === 'undefined' ? 'undefined' : _typeof(style)) !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(style)) {\n      style = mergeStyles(style);\n    }\n\n    Object.keys(style).forEach(function (key) {\n      // Simple case, nothing nested\n      if (!isNestedStyle(style[key]) || !isNestedStyle(result[key])) {\n        result[key] = style[key];\n        return;\n      }\n\n      // If nested media, don't merge the nested styles, append a space to the\n      // end (benign when converted to CSS). This way we don't end up merging\n      // media queries that appear later in the chain with those that appear\n      // earlier.\n      if (key.indexOf('@media') === 0) {\n        var newKey = key;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n          newKey += ' ';\n          if (!result[newKey]) {\n            result[newKey] = style[key];\n            return;\n          }\n        }\n      }\n\n      // Merge all other nested styles recursively\n      result[key] = mergeStyles([result[key], style[key]]);\n    });\n  });\n\n  return result;\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","isNestedStyle","value","constructor","Object","toString","prototype","mergeStyles","styles","result","forEach","style","_typeof","Array","isArray","keys","key","indexOf","newKey","defineProperty","Symbol","iterator","obj"]
}
