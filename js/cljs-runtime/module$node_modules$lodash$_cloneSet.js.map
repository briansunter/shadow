{
"version":3,
"file":"module$node_modules$lodash$_cloneSet.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,qCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAClHC,YAAcJ,OAAA,CAAQ,yCAAR,CADoG,CAElHK,YAAcL,OAAA,CAAQ,yCAAR,CAFoG,CAGlHM,WAAaN,OAAA,CAAQ,wCAAR,CAmBjBC,OAAAC,QAAA,CALAK,QAAiB,CAACC,GAAD,CAAMC,MAAN,CAAcC,SAAd,CAAyB,CACpCC,MAAAA,CAAQF,MAAA,CAASC,SAAA,CAAUJ,UAAA,CAAWE,GAAX,CAAV,CAZDI,CAYC,CAAT,CAAuDN,UAAA,CAAWE,GAAX,CACnE,OAAOH,YAAA,CAAYM,MAAZ,CAAmBP,WAAnB,CAAgC,IAAII,GAAAK,YAApC,CAFiC,CAjB4E;",
"sources":["node_modules/lodash/_cloneSet.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_cloneSet\"] = function(global,process,require,module,exports,shadow$shims) {\nvar addSetEntry = require('./_addSetEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\nmodule.exports = cloneSet;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","addSetEntry","arrayReduce","setToArray","cloneSet","set","isDeep","cloneFunc","array","CLONE_DEEP_FLAG","constructor"]
}
