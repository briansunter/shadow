shadow$provide.module$node_modules$react_desktop$src$animation$bezierEasing=function(global,process,require,module,exports,shadow$shims){function calcBezier(aT,aA1,aA2){return(((1-3*aA2+3*aA1)*aT+(3*aA2-6*aA1))*aT+3*aA1)*aT}function BezierEasing(points,b,c,d){if(4===arguments.length)return new BezierEasing([points,b,c,d]);if(!(this instanceof BezierEasing))return new BezierEasing(points);if(!points||4!==points.length)throw Error("BezierEasing: points must contains 4 values");for(var i=0;4>i;++i)if("number"!==
typeof points[i]||isNaN(points[i])||!isFinite(points[i]))throw Error("BezierEasing: points should be integers.");if(0>points[0]||1<points[0]||0>points[2]||1<points[2])throw Error("BezierEasing x values must be in [0, 1] range.");this._str="BezierEasing("+points+")";this._css="cubic-bezier("+points+")";this._p=points;this._mSampleValues=float32ArraySupported?new Float32Array(11):Array(11);this._precomputed=!1;this.get=this.get.bind(this)}var float32ArraySupported="function"===typeof Float32Array;BezierEasing.prototype=
{get:function(x){var mX1=this._p[0],mY1=this._p[1],mX2=this._p[2],mY2=this._p[3];this._precomputed||this._precompute();return mX1===mY1&&mX2===mY2?x:0===x?0:1===x?1:calcBezier(this._getTForX(x),mY1,mY2)},getPoints:function(){return this._p},toString:function(){return this._str},toCSS:function(){return this._css},_precompute:function(){var mX1=this._p[0],mY1=this._p[1],mX2=this._p[2],mY2=this._p[3];this._precomputed=!0;mX1===mY1&&mX2===mY2||this._calcSampleValues()},_calcSampleValues:function(){for(var mX1=
this._p[0],mX2=this._p[2],i=0;11>i;++i)this._mSampleValues[i]=calcBezier(.1*i,mX1,mX2)},_getTForX:function(aX){for(var mX1=this._p[0],mX2=this._p[2],mSampleValues=this._mSampleValues,intervalStart=0,currentSample=1;10!==currentSample&&mSampleValues[currentSample]<=aX;++currentSample)intervalStart+=.1;--currentSample;mSampleValues=intervalStart+(aX-mSampleValues[currentSample])/(mSampleValues[currentSample+1]-mSampleValues[currentSample])*.1;currentSample=3*(1-3*mX2+3*mX1)*mSampleValues*mSampleValues+
2*(3*mX2-6*mX1)*mSampleValues+3*mX1;if(.001<=currentSample){a:{intervalStart=mSampleValues;for(mSampleValues=0;4>mSampleValues;++mSampleValues){currentSample=3*(1-3*mX2+3*mX1)*intervalStart*intervalStart+2*(3*mX2-6*mX1)*intervalStart+3*mX1;if(0===currentSample){aX=intervalStart;break a}var currentX=calcBezier(intervalStart,mX1,mX2)-aX;intervalStart-=currentX/currentSample}aX=intervalStart}return aX}if(0===currentSample)return mSampleValues;mSampleValues=intervalStart;intervalStart+=.1;var i=0;do currentX=
mSampleValues+(intervalStart-mSampleValues)/2,currentSample=calcBezier(currentX,mX1,mX2)-aX,0<currentSample?intervalStart=currentX:mSampleValues=currentX;while(1E-7<Math.abs(currentSample)&&10>++i);return currentX}};BezierEasing.css={ease:BezierEasing.ease=BezierEasing(.25,.1,.25,1),linear:BezierEasing.linear=BezierEasing(0,0,1,1),"ease-in":BezierEasing.easeIn=BezierEasing(.42,0,1,1),"ease-out":BezierEasing.easeOut=BezierEasing(0,0,.58,1),"ease-in-out":BezierEasing.easeInOut=BezierEasing(.42,0,.58,
1)};module.exports=BezierEasing}
//# sourceMappingURL=module$node_modules$react_desktop$src$animation$bezierEasing.js.map
