shadow$provide.module$node_modules$react_desktop$src$style$alignment=function(global,process,require,module,exports,shadow$shims){function mapAlignmentStyle(key,value,props){var finalKey=void 0,finalValue=void 0;if(-1===allowedValues.indexOf(value))console.error("Unknown value for "+key+": "+value);else{var layout="horizontal";void 0!==props&&"undefined"!==typeof props.layout&&(layout=props.layout);if("horizontalAlignment"===key&&"horizontal"===layout||"verticalAlignment"===key&&"vertical"===layout)switch(finalKey=
"justifyContent",value){case "center":finalValue="center";break;case "left":finalValue="flex-start";break;case "right":finalValue="flex-end"}else if("verticalAlignment"===key&&"horizontal"===layout||"horizontalAlignment"===key&&"vertical"===layout)switch(finalKey="alignItems",value){case "center":finalValue="center";break;case "left":finalValue="flex-start";break;case "right":finalValue="flex-end"}}return[finalKey,finalValue]}Object.defineProperty(exports,"__esModule",{value:!0});exports.alignmentPropTypes=
void 0;exports.removeAlignmentProps=function(props){return(0,_styleHelper.extractProps)(props,alignmentPropTypes)[0]};exports.default=function(){for(var _len=arguments.length,options=Array(_len),_key=0;_key<_len;_key++)options[_key]=arguments[_key];return(0,_styleHelper2.default)(options,alignmentPropTypes,mapAlignmentStyle)};global=(global=require("module$node_modules$prop_types$index"))&&global.__esModule?global:{default:global};var _styleHelper=require("module$node_modules$react_desktop$src$styleHelper"),
_styleHelper2=_styleHelper&&_styleHelper.__esModule?_styleHelper:{default:_styleHelper},allowedValues=["left","right","center"],alignmentPropTypes=exports.alignmentPropTypes={horizontalAlignment:global.default.string,verticalAlignment:global.default.string}}
//# sourceMappingURL=module$node_modules$react_desktop$src$style$alignment.js.map
